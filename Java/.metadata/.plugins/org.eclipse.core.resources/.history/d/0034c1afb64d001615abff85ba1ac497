package cn.edu.pku.sce;

public class ThreadDemo {
	public static void main(String args[]) {
		final int Thread_Size = 100;
		Thread[] threads = new Thread[Thread_Size];
		final Account account = new Account(1000f);
		for (int i = 0; i < Thread_Size; i++) {
			threads[i]=new Thread(new Runnable() {
				public void run() {
					account.Deposit(100);
					account.WithDraw(100);
				}
			});
			threads[i].start();
		}
		for (int i=0; i<Thread_Size; i++){
            try {
                threads[i].join(); //等待所有线程运行结束
            } catch (InterruptedException e) {
                // ignore
            }
        }
        System.out.println("Finally, John's balance is:" + acc.getBalance());

	}
}

class Account {
	float amount;

	public Account(float amt) {
		this.amount = amt;
	}

	public void WithDraw(float t) {
		this.amount += t;
	}

	public void Deposit(float t) {
		this.amount -= t;
	}

	public float GetBlance() {
		return amount;
	}

}