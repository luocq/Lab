package cn.edu.pku.sce;

class PrintBrackets {
	void call(String msg) {
		System.out.print("[");
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			System.out.print("Interrupted");
		}
		System.out.print("]");
	}
}

class Caller implements Runnable {
	String msg;
	PrintBrackets Targets;
	Thread t;
	public Caller(PrintBrackets tag,String s) {
		Targets=tag;
		msg=s;
		t=new Thread(this);
		t.start();
	}
	
	public void run() {
		Targets.call(msg);
	}
}

public class ThreadDemo {
	public static void main(String args[]) {
		PrintBrackets target = new PrintBrackets();
	        Caller ob1 = new Caller(target, "Hello");
	        Caller ob2 = new Caller(target, "Synchronized");
	        Caller ob3 = new Caller(target, "World");
	}
}
/*
class Account {
	float amount;

	public Account(float amt) {
		this.amount = amt;
		try {
			Thread.sleep(2);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void WithDraw(float t) {
		this.amount += t;
		try {
			Thread.sleep(2);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void Deposit(float t) {
		this.amount -= t;
	}

	public float GetBlance() {
		return amount;
	}

}*/